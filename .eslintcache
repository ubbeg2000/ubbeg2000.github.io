[{"/home/ubbeg2000/Code/betak-lncircle/src/index.js":"1","/home/ubbeg2000/Code/betak-lncircle/src/App.js":"2","/home/ubbeg2000/Code/betak-lncircle/src/reportWebVitals.js":"3","/home/ubbeg2000/Code/betak-lncircle/src/components/Card/DisplayCard.js":"4","/home/ubbeg2000/Code/betak-lncircle/src/hooks/useFetch.js":"5","/home/ubbeg2000/Code/betak-lncircle/src/pages/Library.js":"6","/home/ubbeg2000/Code/betak-lncircle/src/components/Card/LibraryCard.js":"7","/home/ubbeg2000/Code/betak-lncircle/src/pages/Apod.js":"8"},{"size":500,"mtime":1606320559542,"results":"9","hashOfConfig":"10"},{"size":1408,"mtime":1607158931109,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606320559542,"results":"12","hashOfConfig":"10"},{"size":1177,"mtime":1606841987399,"results":"13","hashOfConfig":"10"},{"size":698,"mtime":1607155640404,"results":"14","hashOfConfig":"10"},{"size":14374,"mtime":1607158848349,"results":"15","hashOfConfig":"10"},{"size":857,"mtime":1607156491220,"results":"16","hashOfConfig":"10"},{"size":8089,"mtime":1607158365413,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ehkg6c",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/ubbeg2000/Code/betak-lncircle/src/index.js",[],["38","39"],"/home/ubbeg2000/Code/betak-lncircle/src/App.js",[],"/home/ubbeg2000/Code/betak-lncircle/src/reportWebVitals.js",[],"/home/ubbeg2000/Code/betak-lncircle/src/components/Card/DisplayCard.js",[],["40","41"],"/home/ubbeg2000/Code/betak-lncircle/src/hooks/useFetch.js",[],"/home/ubbeg2000/Code/betak-lncircle/src/pages/Library.js",["42"],"import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Button,\n  CircularProgress,\n  Grid,\n  TextField,\n  Modal,\n  Backdrop,\n  Fade,\n  Paper,\n  Container,\n  IconButton,\n  Typography,\n  Hidden,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport LibraryCard from \"../components/Card/LibraryCard\";\nimport { CloudDownloadSharp } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"scroll\",\n  },\n  paper: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"scroll\",\n    backgroundColor: \"#232323\",\n    boxShadow: theme.shadows[5],\n  },\n}));\n\nconst Library = () => {\n  const [param, setParam] = useState(\n    \"https://images-api.nasa.gov/search?q=nebula\"\n  );\n  const [open, setOpen] = useState(false);\n  const [picture, setPicture] = useState({});\n  const [isLoading, data] = useFetch(param);\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={() => setOpen(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        disableScrollLock={true}\n      >\n        <Fade in={open}>\n          <div className={classes.paper} style={{ padding: \"50px 20px\" }}>\n            <Container maxWidth=\"xl\" style={{ marginTop: \"30px\" }}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} md={6} lg={7}>\n                  <Paper\n                    style={{\n                      minHeight: \"300px\",\n                      height: \"100%\",\n                      width: \"100%\",\n                      backgroundColor: \"#343434\",\n                      backgroundPosition: \"center\",\n                      backgroundRepeat: \"no-repeat\",\n                      backgroundSize: \"contain\",\n                      backgroundImage: `url('${\n                        picture.links ? picture.links[0].href : \"\"\n                      }')`,\n                    }}\n                  ></Paper>\n                </Grid>\n                <Grid item xs={12} md={6} lg={5} style={{ color: \"lightgrey\" }}>\n                  <div>\n                    <div>\n                      <IconButton></IconButton>\n                    </div>\n                    <div>\n                      <Typography variant=\"h4\">\n                        {picture.data\n                          ? picture.data[0]\n                            ? picture.data[0].title\n                            : \"-\"\n                          : \"-\"}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" component=\"em\">\n                        {picture.data\n                          ? picture.data[0]\n                            ? picture.data[0].photographer\n                            : \"-\"\n                          : \"-\"}\n                        ,{\" \"}\n                        {picture.data\n                          ? picture.data[0]\n                            ? new Date(\n                                picture.data[0].date_created\n                              ).toLocaleString()\n                            : \"-\"\n                          : \"-\"}\n                      </Typography>\n                    </div>\n                  </div>\n                  <br />\n                  <br />\n                  <Typography variant=\"body1\">\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: picture.data\n                          ? picture.data[0]\n                            ? picture.data[0].description\n                            : \"\"\n                          : \"\",\n                      }}\n                    ></div>\n                  </Typography>\n                  <Button\n                    type=\"submit\"\n                    variant=\"outlined\"\n                    style={{\n                      color: \"lightgrey\",\n                      borderColor: \"lightgrey\",\n                      margin: \"20px 0 20px auto\",\n                    }}\n                    onClick={() =>\n                      window.open(picture.links ? picture.links[0].href : \"\")\n                    }\n                    startIcon={<CloudDownloadSharp />}\n                  >\n                    Download\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    style={{\n                      color: \"lightgrey\",\n                      borderColor: \"lightgrey\",\n                      margin: \"20px 0 20px auto\",\n                    }}\n                    onClick={() => setOpen(false)}\n                  >\n                    Close\n                  </Button>\n                  <br />\n                  {data ? (\n                    data[0] ? (\n                      <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                          <Card style={{ backgroundColor: \"#343434\" }}>\n                            <CardActionArea\n                              onClick={() =>\n                                setPicture(\n                                  data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      1\n                                  ]\n                                )\n                              }\n                            >\n                              <CardMedia\n                                style={{ height: \"200px\" }}\n                                image={\n                                  data[0].collection.items\n                                    ? data[0].collection.items[\n                                        data[0].collection.items.indexOf(\n                                          picture\n                                        ) + 1\n                                      ]\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 1\n                                        ].links[0].href\n                                      : \"\"\n                                    : null\n                                }\n                              />\n                              <CardContent style={{ color: \"lightgrey\" }}>\n                                <Typography>\n                                  {data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      1\n                                  ]\n                                    ? data[0].collection.items\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 1\n                                        ].data[0].title\n                                      : \"\"\n                                    : \"\"}\n                                </Typography>\n                                <Typography component=\"em\">\n                                  {data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      1\n                                  ]\n                                    ? data[0].collection.items\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 1\n                                        ].data[0].date_created.toLocaleString()\n                                      : \"\"\n                                    : \"\"}\n                                </Typography>\n                              </CardContent>\n                            </CardActionArea>\n                          </Card>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <Card style={{ backgroundColor: \"#343434\" }}>\n                            <CardActionArea\n                              onClick={() =>\n                                setPicture(\n                                  data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      2\n                                  ]\n                                )\n                              }\n                            >\n                              <CardMedia\n                                style={{ height: \"200px\" }}\n                                image={\n                                  data[0].collection.items\n                                    ? data[0].collection.items[\n                                        data[0].collection.items.indexOf(\n                                          picture\n                                        ) + 2\n                                      ]\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 2\n                                        ].links[0].href\n                                      : \"\"\n                                    : null\n                                }\n                              />\n                              <CardContent style={{ color: \"lightgrey\" }}>\n                                <Typography>\n                                  {data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      2\n                                  ]\n                                    ? data[0].collection.items\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 2\n                                        ].data[0].title\n                                      : \"\"\n                                    : \"\"}\n                                </Typography>\n                                <Typography component=\"em\">\n                                  {data[0].collection.items[\n                                    data[0].collection.items.indexOf(picture) +\n                                      2\n                                  ]\n                                    ? data[0].collection.items\n                                      ? data[0].collection.items[\n                                          data[0].collection.items.indexOf(\n                                            picture\n                                          ) + 2\n                                        ].data[0].date_created.toLocaleString()\n                                      : \"\"\n                                    : \"\"}\n                                </Typography>\n                              </CardContent>\n                            </CardActionArea>\n                          </Card>\n                        </Grid>\n                      </Grid>\n                    ) : null\n                  ) : null}\n                </Grid>\n              </Grid>\n            </Container>\n          </div>\n        </Fade>\n      </Modal>\n      <Grid container spacing={3}>\n        <Grid xs={12}>\n          <TextField\n            label=\"Search...\"\n            size=\"large\"\n            style={{\n              margin: \"20px 20px\",\n              borderColor: \"lightgrey\",\n            }}\n            variant=\"filled\"\n            InputLabelProps={{\n              style: { color: \"lightgrey\", borderColor: \"lightgrey\" },\n            }}\n            inputProps={{\n              style: {\n                color: \"lightgrey\",\n                borderColor: \"lightgrey\",\n              },\n            }}\n            onChange={(e) =>\n              setParam(`https://images-api.nasa.gov/search?q=${e.target.value}`)\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        {!isLoading && data ? (\n          data[0] ? (\n            data[0].collection ? (\n              data[0].collection.items.map((one) => (\n                <Grid\n                  item\n                  xs={12}\n                  md={4}\n                  onClick={() => {\n                    setOpen(true);\n                    setPicture(one);\n                  }}\n                >\n                  <LibraryCard data={one} />\n                </Grid>\n              ))\n            ) : null\n          ) : null\n        ) : (\n          <CircularProgress\n            size={200}\n            style={{ color: \"lightgrey\", margin: \"auto\" }}\n          />\n        )}\n        {!isLoading && data\n          ? data[0]\n            ? data[0].collection\n              ? data[0].collection.links\n                ? data[0].collection.links.map((one) => (\n                    <Grid item xs={12} md={4}>\n                      <Card\n                        style={{\n                          height: \"100%\",\n                          backgroundColor: \"#343434\",\n                          color: \"lightgrey\",\n                        }}\n                      >\n                        <CardActionArea\n                          style={{ height: \"100%\" }}\n                          onClick={() => setParam(one.href)}\n                        >\n                          <Typography align=\"center\" variant=\"h3\">\n                            {one.prompt.toUpperCase()}\n                          </Typography>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))\n                : null\n              : null\n            : null\n          : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Library;\n","/home/ubbeg2000/Code/betak-lncircle/src/components/Card/LibraryCard.js",[],"/home/ubbeg2000/Code/betak-lncircle/src/pages/Apod.js",["43","44"],"import {\n  Container,\n  Paper,\n  Grid,\n  Typography,\n  CircularProgress,\n  IconButton,\n  Card,\n  CardMedia,\n  CardActionArea,\n  CardContent,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { CloudDownloadSharp } from \"@material-ui/icons\";\n\nconst dMinus = (date, num) => {\n  return new Date(\n    date.getTime() -\n      date.getTimezoneOffset() * 60 * 1000 -\n      num * 24 * 60 * 60 * 1000\n  );\n};\n\nconst Apod = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [date, setDate] = useState([\n    dMinus(new Date(), 0),\n    dMinus(new Date(), 1),\n    dMinus(new Date(), 2),\n  ]);\n\n  useEffect(() => {\n    setDate([\n      dMinus(selectedDate, 0),\n      dMinus(selectedDate, 1),\n      dMinus(selectedDate, 2),\n    ]);\n  }, [selectedDate]);\n\n  const [isLoading, data] = useFetch(\n    `https://api.nasa.gov/planetary/apod?api_key=sD61gj3rowGkP1haNtdptxSNnxo1Mq8dBXVQC5uO&date=${date[0].getFullYear()}-${\n      (date[0].getMonth() + 1).toString().length === 1\n        ? \"0\" + (date[0].getMonth() + 1).toString()\n        : (date[0].getMonth() + 1).toString()\n    }-${\n      (date[0].getDate() - 1).toString().length === 1\n        ? \"0\" + (date[0].getDate() - 1).toString()\n        : (date[0].getDate() - 1).toString()\n    }`\n  );\n  const [isLoading1Days, data1Days] = useFetch(\n    `https://api.nasa.gov/planetary/apod?api_key=sD61gj3rowGkP1haNtdptxSNnxo1Mq8dBXVQC5uO&date=${date[1].getFullYear()}-${\n      (date[1].getMonth() + 1).toString().length === 1\n        ? \"0\" + (date[1].getMonth() + 1).toString()\n        : (date[1].getMonth() + 1).toString()\n    }-${\n      (date[1].getDate() - 1).toString().length === 1\n        ? \"0\" + (date[1].getDate() - 1).toString()\n        : (date[1].getDate() - 1).toString()\n    }`\n  );\n  const [isLoading2Days, data2Days] = useFetch(\n    `https://api.nasa.gov/planetary/apod?api_key=sD61gj3rowGkP1haNtdptxSNnxo1Mq8dBXVQC5uO&date=${date[2].getFullYear()}-${\n      (date[2].getMonth() + 1).toString().length === 1\n        ? \"0\" + (date[2].getMonth() + 1).toString()\n        : (date[2].getMonth() + 1).toString()\n    }-${\n      (date[0].getDate() - 1).toString().length === 1\n        ? \"0\" + (date[2].getDate() - 1).toString()\n        : (date[2].getDate() - 1).toString()\n    }`\n  );\n  return (\n    <div>\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          {isLoading ? (\n            <CircularProgress\n              size={200}\n              style={{ color: \"lightgrey\", margin: \"auto\" }}\n            />\n          ) : (\n            <>\n              <Grid item xs={12} md={6} lg={7}>\n                <Paper\n                  style={{\n                    minHeight: \"300px\",\n                    height: \"100%\",\n                    width: \"100%\",\n                    backgroundColor: \"#343434\",\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"contain\",\n                    backgroundImage: `url('${\n                      data ? (data[0] ? data[0].url : \"\") : \"\"\n                    }')`,\n                  }}\n                ></Paper>\n              </Grid>\n              <Grid item xs={12} md={6} lg={5} style={{ color: \"lightgrey\" }}>\n                <div>\n                  <div>\n                    <IconButton></IconButton>\n                  </div>\n                  <div>\n                    <Typography variant=\"h4\">\n                      {data ? (data[0] ? data[0].title : \"\") : \"\"}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" component=\"em\">\n                      {data ? (data[0] ? data[0].copyright : \"\") : \"-\"},{\" \"}\n                      {data\n                        ? data[0]\n                          ? new Date(data[0].date).toLocaleDateString()\n                          : \"\"\n                        : \"\"}\n                    </Typography>\n                  </div>\n                </div>\n                <br />\n                <br />\n                <Typography variant=\"body1\">\n                  {data ? (data[0] ? data[0].explanation : \"\") : \"\"}\n                </Typography>\n                <Button\n                  type=\"submit\"\n                  variant=\"outlined\"\n                  style={{\n                    color: \"lightgrey\",\n                    borderColor: \"lightgrey\",\n                    margin: \"20px 0 20px auto\",\n                  }}\n                  onClick={() =>\n                    window.open(data ? (data[0] ? data[0].url : \"\") : \"\")\n                  }\n                  startIcon={<CloudDownloadSharp />}\n                >\n                  Download\n                </Button>\n                <br />\n                <Grid container spacing={3}>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    onClick={() => setSelectedDate(date[1])}\n                  >\n                    <Card style={{ backgroundColor: \"#343434\" }}>\n                      <CardActionArea>\n                        <CardMedia\n                          style={{ height: \"200px\" }}\n                          image={\n                            data1Days\n                              ? data1Days[0]\n                                ? data1Days[0].url\n                                : \"\"\n                              : null\n                          }\n                        />\n                        <CardContent style={{ color: \"lightgrey\" }}>\n                          <Typography>\n                            {data1Days\n                              ? data1Days[0]\n                                ? data1Days[0].title\n                                : \"\"\n                              : \"\"}\n                          </Typography>\n                          <Typography component=\"em\">\n                            {data1Days\n                              ? data1Days[0]\n                                ? new Date(\n                                    data1Days[0].date\n                                  ).toLocaleDateString()\n                                : \"\"\n                              : \"\"}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    onClick={() => setSelectedDate(date[2])}\n                  >\n                    <Card style={{ backgroundColor: \"#343434\" }}>\n                      <CardActionArea>\n                        <CardMedia\n                          style={{ height: \"200px\" }}\n                          image={\n                            data2Days\n                              ? data2Days[0]\n                                ? data2Days[0].url\n                                : \"\"\n                              : null\n                          }\n                        />\n                        <CardContent style={{ color: \"lightgrey\" }}>\n                          <Typography>\n                            {data2Days\n                              ? data2Days[0]\n                                ? data2Days[0].title\n                                : \"\"\n                              : \"\"}\n                          </Typography>\n                          <Typography component=\"em\">\n                            {data2Days\n                              ? data2Days[0]\n                                ? new Date(\n                                    data2Days[0].date\n                                  ).toLocaleDateString()\n                                : \"\"\n                              : \"\"}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Apod;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":17,"column":3,"nodeType":"53","messageId":"54","endLine":17,"endColumn":9},{"ruleId":"51","severity":1,"message":"55","line":53,"column":10,"nodeType":"53","messageId":"54","endLine":53,"endColumn":24},{"ruleId":"51","severity":1,"message":"56","line":64,"column":10,"nodeType":"53","messageId":"54","endLine":64,"endColumn":24},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'isLoading1Days' is assigned a value but never used.","'isLoading2Days' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]